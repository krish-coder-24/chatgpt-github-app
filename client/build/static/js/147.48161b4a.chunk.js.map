{"version":3,"file":"static/js/147.48161b4a.chunk.js","mappings":"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","sources":["components/Baymax/Baymax3D.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Text } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// Baymax Body Component\nfunction BaymaxBody({ speaking, emotion, heartRate }) {\n  const meshRef = useRef();\n  const [hovered, setHovered] = useState(false);\n\n  useFrame((state) => {\n    // Breathing animation\n    const breathe = Math.sin(state.clock.elapsedTime * 2) * 0.05 + 1;\n    if (meshRef.current) {\n      meshRef.current.scale.y = breathe;\n      \n      // Speaking animation\n      if (speaking) {\n        meshRef.current.rotation.y = Math.sin(state.clock.elapsedTime * 8) * 0.1;\n      }\n      \n      // Heart rate visualization\n      if (heartRate > 100) {\n        meshRef.current.material.color.setHex(0xff6b6b); // Red for high heart rate\n      } else if (heartRate > 80) {\n        meshRef.current.material.color.setHex(0xffd93d); // Yellow for elevated\n      } else {\n        meshRef.current.material.color.setHex(0x74c0fc); // Blue for normal\n      }\n    }\n  });\n\n  return (\n    <group>\n      {/* Main Body */}\n      <mesh\n        ref={meshRef}\n        position={[0, 0, 0]}\n        onPointerOver={() => setHovered(true)}\n        onPointerOut={() => setHovered(false)}\n      >\n        <sphereGeometry args={[1.2, 32, 32]} />\n        <meshPhongMaterial \n          color={hovered ? \"#a5d8ff\" : \"#74c0fc\"} \n          transparent \n          opacity={0.9}\n          shininess={100}\n        />\n      </mesh>\n      \n      {/* Arms */}\n      <mesh position={[-1.5, 0, 0]} rotation={[0, 0, Math.PI / 2]}>\n        <cylinderGeometry args={[0.3, 0.3, 1.5]} />\n        <meshPhongMaterial color=\"#74c0fc\" transparent opacity={0.8} />\n      </mesh>\n      <mesh position={[1.5, 0, 0]} rotation={[0, 0, Math.PI / 2]}>\n        <cylinderGeometry args={[0.3, 0.3, 1.5]} />\n        <meshPhongMaterial color=\"#74c0fc\" transparent opacity={0.8} />\n      </mesh>\n      \n      {/* Legs */}\n      <mesh position={[-0.5, -1.8, 0]}>\n        <cylinderGeometry args={[0.4, 0.4, 1.8]} />\n        <meshPhongMaterial color=\"#74c0fc\" transparent opacity={0.8} />\n      </mesh>\n      <mesh position={[0.5, -1.8, 0]}>\n        <cylinderGeometry args={[0.4, 0.4, 1.8]} />\n        <meshPhongMaterial color=\"#74c0fc\" transparent opacity={0.8} />\n      </mesh>\n    </group>\n  );\n}\n\n// Baymax Head Component\nfunction BaymaxHead({ speaking, emotion }) {\n  const headRef = useRef();\n  const leftEyeRef = useRef();\n  const rightEyeRef = useRef();\n\n  useFrame((state) => {\n    if (speaking && headRef.current) {\n      headRef.current.rotation.x = Math.sin(state.clock.elapsedTime * 6) * 0.1;\n    }\n    \n    // Eye expressions based on emotion\n    if (leftEyeRef.current && rightEyeRef.current) {\n      switch (emotion) {\n        case 'happy':\n          leftEyeRef.current.scale.y = 0.6;\n          rightEyeRef.current.scale.y = 0.6;\n          break;\n        case 'concerned':\n          leftEyeRef.current.rotation.z = 0.2;\n          rightEyeRef.current.rotation.z = -0.2;\n          break;\n        case 'surprised':\n          leftEyeRef.current.scale.y = 1.5;\n          rightEyeRef.current.scale.y = 1.5;\n          break;\n        default:\n          leftEyeRef.current.scale.y = 1;\n          rightEyeRef.current.scale.y = 1;\n          leftEyeRef.current.rotation.z = 0;\n          rightEyeRef.current.rotation.z = 0;\n      }\n    }\n  });\n\n  return (\n    <group ref={headRef} position={[0, 2, 0]}>\n      {/* Head */}\n      <mesh position={[0, 0, 0]}>\n        <sphereGeometry args={[0.8, 32, 32]} />\n        <meshPhongMaterial color=\"#74c0fc\" transparent opacity={0.9} />\n      </mesh>\n      \n      {/* Eyes */}\n      <mesh ref={leftEyeRef} position={[-0.25, 0.1, 0.7]}>\n        <boxGeometry args={[0.15, 0.3, 0.1]} />\n        <meshBasicMaterial color=\"#000\" />\n      </mesh>\n      <mesh ref={rightEyeRef} position={[0.25, 0.1, 0.7]}>\n        <boxGeometry args={[0.15, 0.3, 0.1]} />\n        <meshBasicMaterial color=\"#000\" />\n      </mesh>\n    </group>\n  );\n}\n\n// Heart Rate Visualization\nfunction HeartRateVisualization({ heartRate, visible }) {\n  const particlesRef = useRef();\n\n  useFrame((state) => {\n    if (particlesRef.current && visible && heartRate > 0) {\n      const intensity = heartRate / 100;\n      particlesRef.current.rotation.y += 0.01 * intensity;\n      \n      // Pulsing effect\n      const pulse = Math.sin(state.clock.elapsedTime * (heartRate / 10)) * 0.3 + 1;\n      particlesRef.current.scale.setScalar(pulse);\n    }\n  });\n\n  if (!visible || !heartRate) return null;\n\n  return (\n    <group ref={particlesRef} position={[0, 0, 0]}>\n      {Array.from({ length: 20 }).map((_, i) => (\n        <mesh\n          key={i}\n          position={[\n            Math.cos((i / 20) * Math.PI * 2) * 2,\n            Math.sin((i / 20) * Math.PI * 2) * 2,\n            0\n          ]}\n        >\n          <sphereGeometry args={[0.05, 8, 8]} />\n          <meshBasicMaterial \n            color={heartRate > 100 ? \"#ff6b6b\" : \"#ff8787\"} \n            transparent \n            opacity={0.7} \n          />\n        </mesh>\n      ))}\n    </group>\n  );\n}\n\n// Status Display\nfunction StatusDisplay({ heartRate, emotion, speaking }) {\n  return (\n    <group position={[0, 3.5, 0]}>\n      <Text\n        fontSize={0.3}\n        color=\"#495057\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n      >\n        {speaking ? \"🗣️ Speaking...\" : `💝 Heart Rate: ${heartRate || '--'} BPM`}\n      </Text>\n      <Text\n        fontSize={0.25}\n        color=\"#6c757d\"\n        anchorX=\"center\"\n        anchorY=\"middle\"\n        position={[0, -0.5, 0]}\n      >\n        😊 Emotion: {emotion || 'neutral'}\n      </Text>\n    </group>\n  );\n}\n\n// Main Baymax 3D Component\nconst Baymax3D = ({ \n  speaking = false, \n  emotion = 'neutral', \n  heartRate = 0, \n  showHeartRate = false,\n  message = \"\",\n  onInteraction = () => {}\n}) => {\n  return (\n    <div style={{ width: '100%', height: '500px', background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }}>\n      <Canvas\n        camera={{ position: [0, 2, 8], fov: 50 }}\n        gl={{ antialias: true }}\n      >\n        {/* Lighting */}\n        <ambientLight intensity={0.6} />\n        <directionalLight\n          position={[10, 10, 5]}\n          intensity={0.8}\n          castShadow\n        />\n        <pointLight position={[0, 5, 0]} intensity={0.5} color=\"#a5d8ff\" />\n\n        {/* Baymax Components */}\n        <BaymaxBody speaking={speaking} emotion={emotion} heartRate={heartRate} />\n        <BaymaxHead speaking={speaking} emotion={emotion} />\n        <HeartRateVisualization heartRate={heartRate} visible={showHeartRate} />\n        <StatusDisplay heartRate={heartRate} emotion={emotion} speaking={speaking} />\n\n        {/* Interactive Message */}\n        {message && (\n          <Text\n            fontSize={0.4}\n            color=\"#fff\"\n            anchorX=\"center\"\n            anchorY=\"middle\"\n            position={[0, -3, 0]}\n            maxWidth={8}\n          >\n            💬 {message}\n          </Text>\n        )}\n\n        {/* Controls */}\n        <OrbitControls\n          enablePan={false}\n          enableZoom={true}\n          enableRotate={true}\n          maxPolarAngle={Math.PI / 2}\n          minDistance={5}\n          maxDistance={15}\n        />\n      </Canvas>\n    </div>\n  );\n};\n\nexport default Baymax3D;"],"names":["BaymaxBody","_ref","speaking","emotion","heartRate","meshRef","useRef","hovered","setHovered","useState","useFrame","state","breathe","Math","sin","clock","elapsedTime","current","scale","y","rotation","material","color","setHex","_jsxs","children","ref","position","onPointerOver","onPointerOut","_jsx","args","transparent","opacity","shininess","PI","BaymaxHead","_ref2","headRef","leftEyeRef","rightEyeRef","x","z","HeartRateVisualization","_ref3","visible","particlesRef","intensity","pulse","setScalar","Array","from","length","map","_","i","cos","StatusDisplay","_ref4","Text","fontSize","anchorX","anchorY","_ref5","showHeartRate","message","onInteraction","style","width","height","background","Canvas","camera","fov","gl","antialias","castShadow","maxWidth","OrbitControls","enablePan","enableZoom","enableRotate","maxPolarAngle","minDistance","maxDistance"],"sourceRoot":""}